version: "2.0"

services:
  nats:
    build:
      context: "./nats"
    expose:
      - "4222"
    ports:
      - "4222:4222"
      - "8222:8222"
    hostname: nats-server

  api:
    build:
      context: "./api"
    depends_on:
      - nats
      - jaeger-agent
    links:
      - jaeger-agent
    labels:
      - "traefik.backend=api"
      - "traefik.frontend.rule=PathPrefix: /api"
      - "traefik.port=8789"
      - "traefik.frontend.entryPoints=http"
    environment:
      NATS_URL: nats://nats:4222
      NATS_USER: ruser
      NATS_PW: T0pS3cr3t
      JAEGER_URL: jaeger-agent
      API_PORT: 8789
      API_HOST: 0.0.0.0
      HEMERA_LOG_LEVEL: error

  math-service:
    build:
      context: "./math-service"
    links:
      - nats
      - jaeger-agent
    depends_on:
      - nats
      - redis
    restart: always
    environment:
      NATS_URL: nats://nats:4222
      NATS_USER: ruser
      NATS_PW: T0pS3cr3t
      JAEGER_URL: jaeger-agent
      HEMERA_LOG_LEVEL: error

  cache-service:
    build:
      context: "./cache-service"
    links:
      - nats
      - jaeger-agent
      - redis
    depends_on:
      - nats
      - redis
    restart: always
    environment:
      REDIS_PORT: 6379
      REDIS_URL: redis
      NATS_URL: nats://nats:4222
      NATS_USER: ruser
      NATS_PW: T0pS3cr3t
      JAEGER_URL: jaeger-agent
      HEMERA_LOG_LEVEL: error

  natsboard:
    build:
      context: "./natsboard"
    depends_on:
      - nats
    links:
      - nats
    ports:
      - "3000:3000"
      - "3001:3001"

  traefik:
    image: traefik
    command: --web --docker --docker.domain=docker.localhost --logLevel=DEBUG
    ports:
      - "8182:80"
      - "8181:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /dev/null:/traefik.toml

  redis:
    image: redis:alpine
    expose:
      - "6379"
    ports:
      - "6379:6379"

  jaeger-collector:
    image: jaegertracing/jaeger-collector
    command: ["/go/bin/collector-linux", "--cassandra.keyspace=jaeger_v1_dc1", "--cassandra.servers=cassandra", "--collector.zipkin.http-port=9411"]
    ports:
      - "14269"
      - "14268:14268"
      - "14267"
      - "9411:9411"
    restart: on-failure
    depends_on:
      - cassandra-schema

  jaeger-query:
    image: jaegertracing/jaeger-query
    command: ["/go/bin/query-linux", "--query.static-files=/go/jaeger-ui/", "--cassandra.keyspace=jaeger_v1_dc1", "--cassandra.servers=cassandra"]
    ports:
      - "16686:16686"
      - "16687"
    restart: on-failure
    depends_on:
      - cassandra-schema

  jaeger-agent:
    image: jaegertracing/jaeger-agent
    command: ["/go/bin/agent-linux", "--collector.host-port=jaeger-collector:14267"]
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
    restart: on-failure
    depends_on:
      - jaeger-collector

  cassandra:
    image: cassandra:3.9

  cassandra-schema:
    image: jaegertracing/jaeger-cassandra-schema
    depends_on:
      - cassandra